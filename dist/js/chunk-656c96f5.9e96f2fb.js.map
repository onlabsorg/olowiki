{"version":3,"sources":["webpack:///../../../src/components/transitions/createTransition.ts","webpack:///../../../src/components/transitions/expand-transition.ts","webpack:///../../../src/components/transitions/index.ts","webpack:///./src/components/olo-tree.vue?675c","webpack:///src/components/olo-tree.vue","webpack:///./src/components/olo-tree.vue?4998","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///./src/components/olo-tree.vue"],"names":["mergeTransitions","dest","transitions","Array","concat","createSimpleTransition","name","origin","mode","functional","props","group","type","Boolean","default","hideOnLeave","leaveAbsolute","String","render","h","context","tag","data","on","beforeEnter","el","style","transformOrigin","webkitTransformOrigin","leave","offsetTop","offsetLeft","offsetWidth","offsetHeight","_transitionInitialStyles","position","top","left","width","height","afterLeave","setProperty","mergeData","children","createJavascriptTransition","functions","expandedParentClass","x","sizeProperty","offsetProperty","upperFirst","_parent","parentNode","_initialStyle","transition","overflow","enter","initialStyle","offset","classList","add","requestAnimationFrame","afterEnter","resetStyles","enterCancelled","leaveCancelled","remove","size","VFadeTransition","VSlideXTransition","VExpandTransition","ExpandTransitionGenerator","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","active","notifyActiveItemChange","scopedSlots","_u","key","fn","ref","item","_v","staticRenderFns","toc","computed","watch","store","root","methods","Children","path","map","id","child","baseMixins","mixins","Colorable","RegistrableInject","VTreeviewNodeProps","activatable","activeClass","color","disablePerNode","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","selectionType","validator","v","includes","VTreeviewNode","extend","inject","treeview","level","Number","Object","parentIsDisabled","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","disabled","getObjectValueByPath","filter","isExcluded","text","scopedProps","leaf","selected","indeterminate","open","computedIcon","hasChildren","length","created","register","beforeDestroy","unregister","checkChildren","Promise","resolve","then","updateOpen","emitOpen","genLabel","$scopedSlots","label","push","slot","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","click","e","stopPropagation","genCheckbox","undefined","$nextTick","updateSelected","emitSelected","genLevel","createRange","genNode","unshift","setTextColor","updateActive","emitActive","genChild","genChildrenWrapper","c","genTransition","filterTreeItem","search","textKey","toLocaleLowerCase","indexOf","filterTreeItems","idKey","childrenKey","excluded","match","i","RegistrableProvide","Themeable","provide","dense","hoverable","items","multipleActive","openAll","returnObject","value","activeCache","Set","nodes","openCache","selectedCache","excludedItems","handler","oldKeys","keys","k","newKeys","getKeys","diff","arrayDiff","forEach","oldSelectedCache","buildTree","deepEqual","deep","handleNodeCacheWatcher","getValue","mounted","$slots","consoleWarn","updateAll","parent","oldNode","hasOwnProperty","vnode","node","calculateState","updateVnodeState","state","counts","reduce","emitNodeCache","event","cache","$emit","updateFn","emitFn","old","getDescendants","descendants","getParents","parents","isParent","delete","isForced","changed","Map","descendant","set","calculated","entries","has","options","bind","themeClasses","component","VTreeview"],"mappings":"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","file":"js/chunk-656c96f5.9e96f2fb.js","sourcesContent":["import { FunctionalComponentOptions, VNode, VNodeData } from 'vue'\nimport mergeData from '../../util/mergeData'\n\nfunction mergeTransitions (\n  dest: Function | Function[] = [],\n  ...transitions: (Function | Function[])[]\n) {\n  /* eslint-disable-next-line no-array-constructor */\n  return Array<Function>().concat(dest, ...transitions)\n}\n\nexport function createSimpleTransition (\n  name: string,\n  origin = 'top center 0',\n  mode?: string\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      group: {\n        type: Boolean,\n        default: false,\n      },\n      hideOnLeave: {\n        type: Boolean,\n        default: false,\n      },\n      leaveAbsolute: {\n        type: Boolean,\n        default: false,\n      },\n      mode: {\n        type: String,\n        default: mode,\n      },\n      origin: {\n        type: String,\n        default: origin,\n      },\n    },\n\n    render (h, context): VNode {\n      const tag = `transition${context.props.group ? '-group' : ''}`\n      const data: VNodeData = {\n        props: {\n          name,\n          mode: context.props.mode,\n        },\n        on: {\n          beforeEnter (el: HTMLElement) {\n            el.style.transformOrigin = context.props.origin\n            el.style.webkitTransformOrigin = context.props.origin\n          },\n        },\n      }\n\n      if (context.props.leaveAbsolute) {\n        data.on!.leave = mergeTransitions(data.on!.leave, (el: HTMLElement) => {\n          const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\n          el._transitionInitialStyles = {\n            position: el.style.position,\n            top: el.style.top,\n            left: el.style.left,\n            width: el.style.width,\n            height: el.style.height,\n          }\n          el.style.position = 'absolute'\n          el.style.top = offsetTop + 'px'\n          el.style.left = offsetLeft + 'px'\n          el.style.width = offsetWidth + 'px'\n          el.style.height = offsetHeight + 'px'\n        })\n        data.on!.afterLeave = mergeTransitions(data.on!.afterLeave, (el?: HTMLElement) => {\n          if (el && el._transitionInitialStyles) {\n            const { position, top, left, width, height } = el._transitionInitialStyles\n            delete el._transitionInitialStyles\n            el.style.position = position || ''\n            el.style.top = top || ''\n            el.style.left = left || ''\n            el.style.width = width || ''\n            el.style.height = height || ''\n          }\n        })\n      }\n      if (context.props.hideOnLeave) {\n        data.on!.leave = mergeTransitions(data.on!.leave, (el: HTMLElement) => {\n          el.style.setProperty('display', 'none', 'important')\n        })\n      }\n\n      return h(tag, mergeData(context.data, data), context.children)\n    },\n  }\n}\n\nexport function createJavascriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n): FunctionalComponentOptions {\n  return {\n    name,\n\n    functional: true,\n\n    props: {\n      mode: {\n        type: String,\n        default: mode,\n      },\n    },\n\n    render (h, context): VNode {\n      return h(\n        'transition',\n        mergeData(context.data, {\n          props: { name },\n          on: functions,\n        }),\n        context.children\n      )\n    },\n  }\n}\n","import { upperFirst } from '../../util/helpers'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle?: {\n    transition: string\n    overflow: string\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = `offset${upperFirst(sizeProperty)}` as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    beforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    enter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle!\n\n      el.style.setProperty('transition', 'none', 'important')\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden'\n      const offset = `${el[offsetProperty]}px`\n\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    afterEnter: resetStyles,\n    enterCancelled: resetStyles,\n\n    leave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    afterLeave,\n    leaveCancelled: afterLeave,\n  }\n\n  function afterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    const size = el._initialStyle![sizeProperty]\n    el.style.overflow = el._initialStyle!.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n","import {\n  createSimpleTransition,\n  createJavascriptTransition,\n} from './createTransition'\n\nimport ExpandTransitionGenerator from './expand-transition'\n\n// Component specific transitions\nexport const VCarouselTransition = createSimpleTransition('carousel-transition')\nexport const VCarouselReverseTransition = createSimpleTransition('carousel-reverse-transition')\nexport const VTabTransition = createSimpleTransition('tab-transition')\nexport const VTabReverseTransition = createSimpleTransition('tab-reverse-transition')\nexport const VMenuTransition = createSimpleTransition('menu-transition')\nexport const VFabTransition = createSimpleTransition('fab-transition', 'center center', 'out-in')\n\n// Generic transitions\nexport const VDialogTransition = createSimpleTransition('dialog-transition')\nexport const VDialogBottomTransition = createSimpleTransition('dialog-bottom-transition')\nexport const VDialogTopTransition = createSimpleTransition('dialog-top-transition')\nexport const VFadeTransition = createSimpleTransition('fade-transition')\nexport const VScaleTransition = createSimpleTransition('scale-transition')\nexport const VScrollXTransition = createSimpleTransition('scroll-x-transition')\nexport const VScrollXReverseTransition = createSimpleTransition('scroll-x-reverse-transition')\nexport const VScrollYTransition = createSimpleTransition('scroll-y-transition')\nexport const VScrollYReverseTransition = createSimpleTransition('scroll-y-reverse-transition')\nexport const VSlideXTransition = createSimpleTransition('slide-x-transition')\nexport const VSlideXReverseTransition = createSimpleTransition('slide-x-reverse-transition')\nexport const VSlideYTransition = createSimpleTransition('slide-y-transition')\nexport const VSlideYReverseTransition = createSimpleTransition('slide-y-reverse-transition')\n\n// Javascript transitions\nexport const VExpandTransition = createJavascriptTransition('expand-transition', ExpandTransitionGenerator())\nexport const VExpandXTransition = createJavascriptTransition('expand-x-transition', ExpandTransitionGenerator('', true))\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCarouselTransition,\n    VCarouselReverseTransition,\n    VDialogTransition,\n    VDialogBottomTransition,\n    VDialogTopTransition,\n    VFabTransition,\n    VFadeTransition,\n    VMenuTransition,\n    VScaleTransition,\n    VScrollXTransition,\n    VScrollXReverseTransition,\n    VScrollYTransition,\n    VScrollYReverseTransition,\n    VSlideXTransition,\n    VSlideXReverseTransition,\n    VSlideYTransition,\n    VSlideYReverseTransition,\n    VTabReverseTransition,\n    VTabTransition,\n    VExpandTransition,\n    VExpandXTransition,\n  },\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-treeview',{staticClass:\"olo-tree\",attrs:{\"dense\":\"\",\"hoverable\":\"\",\"color\":\"black\",\"items\":_vm.children,\"activatable\":\"\",\"active\":[_vm.active]},on:{\"update:active\":_vm.notifyActiveItemChange},scopedSlots:_vm._u([{key:\"prepend\",fn:function(ref){\nvar item = ref.item;\nreturn [(item.children)?_c('v-icon',[_vm._v(\" mdi-file-document-multiple-outline \")]):_c('v-icon',[_vm._v(\" mdi-file-document-outline \")])]}}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <v-treeview class=\"olo-tree\"\n        dense hoverable color=\"black\"\n\n        :items=\"children\"\n\n        activatable\n        :active=\"[active]\"\n        @update:active=\"notifyActiveItemChange\"\n        >\n        <template v-slot:prepend=\"{ item }\">\n            <v-icon v-if=\"item.children\">\n                mdi-file-document-multiple-outline\n            </v-icon>\n            <v-icon v-else>\n                mdi-file-document-outline\n            </v-icon>\n        </template>\n    </v-treeview>\n</template>\n\n<script>\nimport * as pathlib from 'path';\n\nexport default {\n\n    name: 'olo-tree',\n\n    props: ['store', 'root', 'active'],\n\n    data: () => ({\n        toc: [],\n    }),\n\n    computed: {\n\n        children () {\n            return Children('/', this.toc);\n        }\n    },\n\n    watch: {\n        store () { this.updateTOC() },\n        root  () { this.updateTOC() }\n    },\n\n    methods: {\n\n        async updateTOC () {\n            const {data} = await this.store.load(this.root);\n            this.toc = Array.isArray(data._toc) ? data._toc : [];\n        },\n\n        async handleStoreChange () {\n            await this.updateTOC();\n        },\n\n        notifyActiveItemChange (activeItems) {\n            this.$emit('update:active', activeItems[0] || \"\");\n        }\n    },\n\n    async mounted () {\n        await this.updateTOC();\n        this.store.onChange(this.handleStoreChange.bind(this));\n    }\n}\n\nconst Children = (path, toc) => toc.map(item => {\n    const child = {\n        name: item.name,\n        id: pathlib.join(path, item.name) + (item.children ? \"/\" : \"\")\n    };\n    if (Array.isArray(item.children)) {\n        child.children = Children(child.id, item.children);\n    }\n    return child;\n});\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./olo-tree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./olo-tree.vue?vue&type=script&lang=js&\"","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  disablePerNode: Boolean,\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (!this.disablePerNode && (this.parentIsDisabled && this.selectionType === 'leaf'))\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          disablePerNode: this.disablePerNode,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    disabled: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren) ?? []\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (\n          this.selectionType !== 'independent' &&\n          parent !== null &&\n          !this.nodes.hasOwnProperty(key) &&\n          this.nodes.hasOwnProperty(parent)\n        ) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length && this.selectionType !== 'independent') {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, this.disabled || getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","import { render, staticRenderFns } from \"./olo-tree.vue?vue&type=template&id=9e84dd6c&\"\nimport script from \"./olo-tree.vue?vue&type=script&lang=js&\"\nexport * from \"./olo-tree.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VIcon,VTreeview})\n"],"sourceRoot":""}
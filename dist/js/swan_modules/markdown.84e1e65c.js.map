{"version":3,"sources":["webpack:///./node_modules/@onlabsorg/olojs/lib/swan_modules/markdown.js","webpack:///./node_modules/marked/src/Slugger.js","webpack:///./node_modules/marked/src/Renderer.js","webpack:///./node_modules/marked/src/Lexer.js","webpack:///./node_modules/marked/src/rules.js","webpack:///./node_modules/marked/src/InlineLexer.js","webpack:///./node_modules/marked/src/helpers.js","webpack:///./node_modules/marked/src/defaults.js","webpack:///./node_modules/marked/src/marked.js","webpack:///./node_modules/marked/src/Parser.js","webpack:///./node_modules/marked/src/TextRenderer.js"],"names":["marked","exports","__apply__","text","module","this","seen","value","slug","toLowerCase","trim","replace","hasOwnProperty","originalSlug","defaults","cleanUrl","escape","options","code","infostring","escaped","lang","match","highlight","out","langPrefix","quote","html","level","raw","slugger","headerIds","headerPrefix","xhtml","body","ordered","start","type","startatt","checked","header","content","flags","tag","align","href","title","sanitize","baseUrl","block","rtrim","splitCells","Lexer","tokens","links","Object","create","rules","normal","pedantic","gfm","src","lexer","lex","token","top","next","loose","cap","bull","b","item","listStart","listItems","t","space","i","l","isordered","istask","ischecked","newline","exec","substring","length","push","lastToken","trimRight","codeBlockStyle","fences","heading","depth","nptable","split","cells","test","hr","blockquote","list","indexOf","RegExp","bullet","smartLists","slice","join","charAt","undefined","task","pre","sanitizer","def","table","lheading","paragraph","Error","charCodeAt","noopTest","edit","merge","_paragraph","_label","_title","getRegex","source","_tag","_comment","inline","autolink","url","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","breaks","Renderer","findClosingBracket","InlineLexer","renderer","output","prevCapZero","inLink","inRawBlock","lastParenIndex","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","ch","Math","random","toString","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","encode","unescapeTest","unescape","_","n","String","fromCharCode","parseInt","caret","regex","opt","obj","name","val","nonWordAndColonTest","originIndependentUrl","base","prot","decodeURIComponent","e","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","relativeBase","target","key","arguments","prototype","call","tableRow","count","row","offset","str","curr","splice","c","invert","suffLen","currChar","substr","checkSanitizeDeprecation","silent","console","warn","getDefaults","changeDefaults","newDefaults","Parser","TextRenderer","Slugger","callback","pending","done","err","parse","message","setOptions","parser","inlineLexer","inlineText","reverse","tok","pop","peek","cell","j","tablecell","tablerow","nextToken","checkbox","parseText","listitem","errMsg","log"],"mappings":"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","file":"js/swan_modules/markdown.84e1e65c.js","sourcesContent":["/**\n *  markdown - olojs expression stdlib module\n *  ============================================================================\n *  This module contains functions to render the `markdown` markup format.\n */\n\nconst marked = require(\"marked\");\n\n/**\n *  markdown - function\n *  ----------------------------------------------------------------------------\n *  Takes a markdown text as input and returns the corresponding HTML text.\n *  ```\n *  html_text = markdown(md_text)\n *  ```\n *  For example, the function `markdown('*bold*')` returns `<p><em>bold</em></p>`.\n */\nexports.__apply__ = text => marked(text);\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.html(this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]);\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n"],"sourceRoot":""}
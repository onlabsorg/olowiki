{"version":3,"sources":["webpack:///./node_modules/@onlabsorg/swan-js/lib/modules/http.js"],"names":["ensureString","string","Error","module","exports","swan","url","options","Object","method","response","fetch","ok","status","text"],"mappings":"wGAoCA,SAASA,EAAcC,GACnB,GAAsB,kBAAXA,EAAqB,MAAM,IAAIC,MAAM,wBA/BpD,EAAQ,QAERC,EAAOC,QAAUC,IAAQ,CAgBrB,UAAWC,EAAKC,EAAQ,IACpBP,EAAaM,GACbC,EAAUC,OAAOD,GACjBA,EAAQE,OAAS,MAEjB,MAAMC,QAAiBC,MAAML,EAAKC,GAClC,IAAKG,EAASE,GAAI,MAAM,IAAIV,MAAMQ,EAASG,QAC3C,aAAaH,EAASI","file":"js/swan_modules/http.48e1720d.js","sourcesContent":["/**\n *  http - swan stdlib module\n *  ============================================================================\n *  The http library exposes methods to use the HTTP protocol.\n */\n\nrequire(\"isomorphic-fetch\");\n\nmodule.exports = swan => ({\n\n    /**\n     *  http.get - asynchronous function\n     *  ----------------------------------------------------------------------------\n     *  Sends an HTTP GET request to the given URL and returns the response body as\n     *  text. In case of error, it throws the HTTP status code (in js) or returns\n     *  an Undefined value (in swan).\n     *  ```\n     *  text = await http.get(url, options)\n     *  ```\n     *  - `url` is the URL of the resource to be fetched\n     *  - `options` is the second parameter of the JavaScript\n     *    [fetch](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch)\n     *    function.\n     */\n    async get (url, options={}) {\n        ensureString(url);\n        options = Object(options);\n        options.method = \"get\";\n\n        const response = await fetch(url, options);\n        if (!response.ok) throw new Error(response.status);\n        return await response.text();\n    },\n});\n\n\nfunction ensureString (string) {\n    if (typeof string !== \"string\") throw new Error(\"String type expected\");\n}\n"],"sourceRoot":""}
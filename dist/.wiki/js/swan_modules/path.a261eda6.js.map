{"version":3,"sources":["webpack:///./node_modules/@onlabsorg/swan-js/lib/modules/path.js"],"names":["pathlib","module","exports","types","path","join","chunks","textChunks","map","chunk","wrap","toString","normalize","split","fullPath","slice","Tuple"],"mappings":"wGAQA,MAAMA,EAAU,EAAQ,QAExBC,EAAOC,QAAUC,IACb,MAAMC,EAAO,GA6Bb,OAjBAA,EAAKC,KAAO,IAAIC,KACZ,MAAMC,EAAaD,EAAOE,IAAIC,GAASN,EAAMO,KAAKD,GAAOE,YACzD,OAAOX,EAAQY,UAAUL,EAAWF,KAAK,OAU7CD,EAAKS,MAAQ,IAAIP,KACb,MAAMQ,EAAWV,EAAKC,QAAQC,GAAQS,MAAM,GAC5C,OAAO,IAAIZ,EAAMa,SAASF,EAASD,MAAM,MAAMD,aAG5CR","file":".wiki/js/swan_modules/path.a261eda6.js","sourcesContent":["/**\n *  path module\n *  ============================================================================\n *  \n *  The `path` module contains functions for manipulating file paths.\n *\n */\n \nconst pathlib = require('path');\n\nmodule.exports = types => {\n    const path = {};\n    \n    const isNumb = x => types.wrap(x) instanceof types.Numb;\n    const isText = x => types.wrap(x) instanceof types.Text;\n\n\n    /**\n     *  `path.join: Tuple chunks -> Text p`\n     *  ------------------------------------------------------------------------\n     *  Given a tuple of path chunks, joins them together in a single path and\n     *  resolves `.` and `..` segments.\n     */\n    path.join = (...chunks) => {\n        const textChunks = chunks.map(chunk => types.wrap(chunk).toString());\n        return pathlib.normalize(textChunks.join('/'));\n    };    \n    \n\n    /**\n     *  `path.split: Tuple chunks -> Tuple segments`\n     *  ------------------------------------------------------------------------\n     *  Given a path, returns all its segments, after normalizing it. If a \n     *  chunk of partial paths is passed, it joins the chunks first.\n     */\n    path.split = (...chunks) => {\n        const fullPath = path.join(...chunks).slice(1);\n        return new types.Tuple(...fullPath.split('/')).normalize();\n    };\n    \n    return path;  \n}\n"],"sourceRoot":""}